vfio: use the new follow_pfnmap API

jira LE-3557
Rebuild_History Non-Buildable kernel-5.14.0-570.26.1.el9_6
commit-author Peter Xu <peterx@redhat.com>
commit a77f9489f1d7873a56e1d6640cc0c4865f64176b
Empty-Commit: Cherry-Pick Conflicts during history rebuild.
Will be included in final tarball splat. Ref for failed cherry-pick at:
ciq/ciq_backports/kernel-5.14.0-570.26.1.el9_6/a77f9489.failed

Use the new API that can understand huge pfn mappings.

Link: https://lkml.kernel.org/r/20240826204353.2228736-14-peterx@redhat.com
	Signed-off-by: Peter Xu <peterx@redhat.com>
	Cc: Alex Williamson <alex.williamson@redhat.com>
	Cc: Jason Gunthorpe <jgg@nvidia.com>
	Cc: Alexander Gordeev <agordeev@linux.ibm.com>
	Cc: Aneesh Kumar K.V <aneesh.kumar@linux.ibm.com>
	Cc: Borislav Petkov <bp@alien8.de>
	Cc: Catalin Marinas <catalin.marinas@arm.com>
	Cc: Christian Borntraeger <borntraeger@linux.ibm.com>
	Cc: Dave Hansen <dave.hansen@linux.intel.com>
	Cc: David Hildenbrand <david@redhat.com>
	Cc: Gavin Shan <gshan@redhat.com>
	Cc: Gerald Schaefer <gerald.schaefer@linux.ibm.com>
	Cc: Heiko Carstens <hca@linux.ibm.com>
	Cc: Ingo Molnar <mingo@redhat.com>
	Cc: Matthew Wilcox <willy@infradead.org>
	Cc: Niklas Schnelle <schnelle@linux.ibm.com>
	Cc: Paolo Bonzini <pbonzini@redhat.com>
	Cc: Ryan Roberts <ryan.roberts@arm.com>
	Cc: Sean Christopherson <seanjc@google.com>
	Cc: Sven Schnelle <svens@linux.ibm.com>
	Cc: Thomas Gleixner <tglx@linutronix.de>
	Cc: Vasily Gorbik <gor@linux.ibm.com>
	Cc: Will Deacon <will@kernel.org>
	Cc: Zi Yan <ziy@nvidia.com>
	Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
(cherry picked from commit a77f9489f1d7873a56e1d6640cc0c4865f64176b)
	Signed-off-by: Jonathan Maple <jmaple@ciq.com>

# Conflicts:
#	drivers/vfio/vfio_iommu_type1.c
diff --cc drivers/vfio/vfio_iommu_type1.c
index 6c6586af7953,bf391b40e576..000000000000
--- a/drivers/vfio/vfio_iommu_type1.c
+++ b/drivers/vfio/vfio_iommu_type1.c
@@@ -515,12 -513,10 +515,14 @@@ static int follow_fault_pfn(struct vm_a
  			    unsigned long vaddr, unsigned long *pfn,
  			    bool write_fault)
  {
- 	pte_t *ptep;
- 	pte_t pte;
- 	spinlock_t *ptl;
+ 	struct follow_pfnmap_args args = { .vma = vma, .address = vaddr };
  	int ret;
  
++<<<<<<< HEAD
 +	ret = follow_pte(vma->vm_mm, vaddr, &ptep, &ptl);
++=======
+ 	ret = follow_pfnmap_start(&args);
++>>>>>>> a77f9489f1d7 (vfio: use the new follow_pfnmap API)
  	if (ret) {
  		bool unlocked = false;
  
@@@ -534,7 -530,7 +536,11 @@@
  		if (ret)
  			return ret;
  
++<<<<<<< HEAD
 +		ret = follow_pte(vma->vm_mm, vaddr, &ptep, &ptl);
++=======
+ 		ret = follow_pfnmap_start(&args);
++>>>>>>> a77f9489f1d7 (vfio: use the new follow_pfnmap API)
  		if (ret)
  			return ret;
  	}
* Unmerged path drivers/vfio/vfio_iommu_type1.c
